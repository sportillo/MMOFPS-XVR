class Bullet
{
	var	position;
	var direction;
	var mesh, obj;
	var speed;
	var flying;
	var color;
	Update(level);
	Draw();
	Shoot(pos, dir);
	GetPosition();
	GetFlying();
	SetFlying(state);
};

function Bullet::GetFlying()
{
	return flying;
}

function Bullet::SetFlying(state)
{
	flying = state;
}

function Bullet::GetPosition()
{
	return position;
}

function Bullet::Bullet(col)
{
	color = col;
	mesh  = CVmNewMesh(VRP_BOX);
	mesh.Normalize(0.1);
	obj = CVmObj(mesh);
	mesh.modulateMaterials(color);
	flying = false;
	speed = 0.5;
}

function Bullet::Shoot(pos, dir)
{
	position  = pos;
	direction = dir;
	flying = true;
}

function Bullet::Update(level)
{
	var oldposition = position;
	if (flying)
	{
		position += direction * speed;
		position.y = 1;
			
		var i = int(position.x);
		var j = int(position.z);
		
		if(level.GetWallMatrix()[i][j] == 1)
			flying = false;
		else
		   obj.SetPosition(position);
	}
}

function Bullet::Draw()
{
	if(flying)
		obj.Draw();
}
