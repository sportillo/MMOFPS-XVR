/* Include s3d symbols */
#include <Script3d.h>
#include <Camera.s3d.h>
#include <Swat.s3d>
#include <Scenario.s3d>

/* Set global scene parameters */
SET SCENE_FOV  = 60;
SET SCENE_NEAR = 0.25;
SET SCENE_FAR  = 100;
SET AUDIO_OPENAL = 1;

/* Camera globals */
var CamPos = [0.0, 5.0, 30.0]; 	// camera position

/* Light globals */
var Light0;
var PosL = [0.0, 10.0, 10.0];	// default light position

/* Game globals */
var Player;
var PlayerId = -1; /* start with an invalid ID */

var Level;
var Enemies;

/* Function declarations */
function RandomPos();


function RandomPos()
{
	while (true)
	{
		var x = Rand(Level.Width);
		var z = Rand(Level.Height);
		
		if (!Level.IsColliding(x, z))
			return [x, 0, z];
	}
}


function OnDownload()
{
	/* Extract game files */
	FileDownload("XVRResources.zip");
}


function OnInit(params)
{
	/* Initialize camera */
	CameraGetCurrent().SetPosition(CamPos);

	/* Initialize light */
	Light0 = CVmLight();
	Light0.SetPosition(PosL);
	Light0.SetDiffuse(1, 1, 1);
	Light0.Enable();

	/* Initialize scenario */
	Level = Scenario();
	Level.Init("level.txt");
	
	/* Initialize player */
	Player = Swat(PlayerId, [1,0,0], [5,0,5], true);
	Player.Position.x_z = RandomPos() + [0.5, 0, 0.5];
}


function OnFrame()
{
	/* Update player */
	Player.Update(Level);
	
	/* Update camera */
	var p = Player.Position; p.y = 1.5;
	var d = Player.Direction;
	
	CameraGetCurrent().SetPosition(p);
	CameraGetCurrent().SetDirection(d);
//	Level.GetFX().SetListenerPosition(p);
	var cam_z_axis = CameraGetCurrent().GetZAxis(); 
	var cam_y_axis = CameraGetCurrent().GetYAxis();
//	Level.GetFX().SetListenerOrientation(cam_z_axis, cam_y_axis);
	 
	/* Update lights */
	Light0.SetPosition(p);
	
	/* Draw scene */
	SceneBegin();

	Level.Draw();
	Player.Draw();

	SceneEnd();
}



function DownloadReady(RequestID)
{
}

function OnTimer()
{
}

function OnEvent(eventID, wparam, lparam)
{
}

function OnError()
{
}

function OnExit()
{
}
