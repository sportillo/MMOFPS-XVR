/* Include s3d symbols */
#include <Script3d.h>
#include <Camera.s3d.h>
#include <Swat.s3d>
#include <Scenario.s3d>

/* Set global scene parameters */
SET SCENE_FOV  = 60;
SET SCENE_NEAR = 0.25;
SET SCENE_FAR  = 100;
SET AUDIO_OPENAL = 1;

SET CAMERA_HEIGHT = 1.5;

/* Camera globals */
var CamPos = [0.0, 5.0, 30.0]; 	// camera position
var grabMouse = false;

/* Light globals */
var Light0;
var PosL = [16.0, 10.0, 16.0];	// default light position

/* Game globals */
var PlayerId = -1; /* start with an invalid ID */
var Level;

/* Function declarations */
function CameraUpdate();
function DisplayScoreboard();
function DisplayStatus();
function ShowCrosshair();


function CameraUpdate()
{
	var p = Level.Player.Position; 
	var d = Level.Player.Direction;
	
	/* Adjust camera height */	
	p += [0, CAMERA_HEIGHT, 0];
	
	/* Update camera */
	CameraGetCurrent().SetPosition(p);
	CameraGetCurrent().SetDirection(d);
	
	var cam_z_axis = CameraGetCurrent().GetZAxis(); 
	var cam_y_axis = CameraGetCurrent().GetYAxis();
	
//	Level.GetFX().SetListenerPosition(p);
//	Level.GetFX().SetListenerOrientation(cam_z_axis, cam_y_axis);

	/* Keep mouse cursor centered */
	if (grabMouse)
		SetCursorPos(0.5, 0.5);
}


function DisplayScoreboard()
{
	var x = 0.05, y = 0.9;
	var i = 0;
	
	ConsoleFont("Tahoma", 20);
	
	ConsoleColor(Level.Player.Color);
	ConsoleText(x, y, "Player:\t\t" + str(Level.Player.Score));
	
	y -= 0.025;
	ConsoleLines([x, y, x + 0.3, y]);
	
	foreach (var e in Level.Enemies)
	{
		y -= 0.05;
		i++;
		
		ConsoleColor(e.Color);
		ConsoleText(x, y, "Enemy " + str(i) + ":\t" + str(e.Score));
	}
}


function DisplayStatus()
{
	var p = Level.Player;
	
	ConsoleFont("Tahoma", 20);
	ConsoleColor([1, 1, 0]);
	
	ConsoleText(0.05, 0.05, str(p.ClipCurrent) + " / " + str(p.ClipRemaining));
}


function ShowCrosshair()
{
	ConsoleColor([1, 1, 1]);
	ConsoleLines([0.5, 0.45, 0.5, 0.55]);
	ConsoleLines([0.45, 0.5, 0.55, 0.5]);
}


function OnDownload()
{
	/* Extract game files */
	FileDownload("XVRResources.zip");
}


function OnInit(params)
{
	/* Limit framerate */
	SetFramerate(60);
	
	/* Hide cursor */
	grabMouse = true;
	ShowCursor(false);
	ShowCursor(false); /* FIX */
	
	/* Initialize scenario */
	Level = Scenario();
	Level.Init("level.txt");
	
	/* Initialize player */
	Level.Player = Swat(PlayerId, [1,0,0], [0, 0, 0], true);
	Level.Player.Level = Level; /* FIX ME */
	Level.Player.Respawn();
	
	/* Initialize camera */
	CameraUpdate();

	/* Initialize light */
	Light0 = CVmLight();
	Light0.SetPosition(PosL);
	Light0.SetDiffuse(1, 1, 1);
	Light0.Enable();
	
	/* DEBUG: add dummies */
	Level.AddEnemy(Swat(1, [0,1,0], [0, 0, 0], false));
	Level.AddEnemy(Swat(2, [0,0,1], [0, 0, 0], false));
	
	foreach (var e in Level.Enemies)
		e.Respawn();
}


function OnFrame()
{
	/* Parse commands */
	if (KeyPressed(VK_TAB))
		DisplayScoreboard();
		
	if (KeyPressed(VK_ESCAPE))
	{
		grabMouse = !grabMouse;
		ShowCursor(!grabMouse);
	}
	
	/* Update game */
	Level.Update();
	
	/* Update camera */
	CameraUpdate();
	
	/* Show status */
	DisplayStatus();
	ShowCrosshair();
	 
	/* Update lights */
	Light0.SetPosition(Level.Player.Position);
	
	/* Draw scene */
	SceneBegin();

	Level.Draw();

	SceneEnd();
}



function DownloadReady(RequestID)
{
}

function OnTimer()
{
}

function OnEvent(eventID, wparam, lparam)
{
}

function OnError()
{
}

function OnExit()
{
}
