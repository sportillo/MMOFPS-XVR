/* Include s3d symbols */
#include <Script3d.h>
#include <Camera.s3d.h>
#include <Swat.s3d>
#include <Scenario.s3d>

/* Set global scene parameters */
SET SCENE_FOV  = 60;
SET SCENE_NEAR = 0.25;
SET SCENE_FAR  = 100;
SET AUDIO_OPENAL = 1;

SET CAMERA_HEIGHT = 1.5;

/* Camera globals */
var CamPos = [0.0, 5.0, 30.0]; 	// camera position
var grabMouse = false;

/* Light globals */
var Light0;
var PosL = [16.0, 10.0, 16.0];	// default light position

/* Game globals */
var Player;
var PlayerId = -1; /* start with an invalid ID */

var Level;
var Enemies;

/* Function declarations */
function RandomPos();
function CameraUpdate();
function DisplayScoreboard();


function RandomPos()
{
	while (true)
	{
		var x = Rand(Level.Width - 1) + 0.5;
		var z = Rand(Level.Height - 1) + 0.5;
		
		if (!Level.IsColliding(x, z, 0))
			return [x, 0, z];
	}
}


function CameraUpdate()
{
	var p = Player.Position; 
	var d = Player.Direction;
	
	/* Adjust camera height */	
	p += [0, CAMERA_HEIGHT, 0];
	
	/* Update camera */
	CameraGetCurrent().SetPosition(p);
	CameraGetCurrent().SetDirection(d);
	
//	Level.GetFX().SetListenerPosition(p);
	var cam_z_axis = CameraGetCurrent().GetZAxis(); 
	var cam_y_axis = CameraGetCurrent().GetYAxis();
//	Level.GetFX().SetListenerOrientation(cam_z_axis, cam_y_axis);

	/* Keep mouse cursor centered */
	if (grabMouse)
		SetCursorPos(0.5, 0.5);
}


function DisplayScoreboard()
{
	var x = 0.05, y = 0.9;
	var i = 0;
	
	ConsoleFont("Tahoma", 20);
	
	ConsoleColor(Player.Color);
	ConsoleText(x, y, "Player:\t\t" + str(Player.Score));
	
	y -= 0.025;
	ConsoleLines([x, y, x + 0.3, y]);
	
	foreach (var e in Enemies)
	{
		y -= 0.05;
		i++;
		
		ConsoleColor(e.Color);
		ConsoleText(x, y, "Enemy " + str(i) + ":\t" + str(e.Score));
	}
}


function OnDownload()
{
	/* Extract game files */
	FileDownload("XVRResources.zip");
}


function OnInit(params)
{
	/* Hide cursor */
	grabMouse = true;
	ShowCursor(false);
	ShowCursor(false); /* FIX */
	
	/* Initialize scenario */
	Level = Scenario();
	Level.Init("level.txt");
	
	/* Initialize player */
	Player = Swat(PlayerId, [1,0,0], RandomPos(), true);
	
	/* Initialize enemies */
	Enemies = Array(0);
	
	/* Initialize camera */
	CameraUpdate();

	/* Initialize light */
	Light0 = CVmLight();
	Light0.SetPosition(PosL);
	Light0.SetDiffuse(1, 1, 1);
	Light0.Enable();
	
	/* DEBUG: add dummies */
	aadd(Enemies, Swat(1, [0,1,0], RandomPos(), false));
	aadd(Enemies, Swat(2, [0,0,1], RandomPos(), false));
}


function OnFrame()
{
	/* Parse commands */
	if (KeyPressed(VK_TAB))
		DisplayScoreboard();
		
	if (KeyPressed(VK_ESCAPE))
	{
		grabMouse = false;
		ShowCursor(true);
	}
	
	/* Update player */
	Player.Update(Level);
	
	/* Update enemies */
	foreach (var e in Enemies)
		e.Update(Level);
	
	/* Update camera */
	CameraUpdate();
	 
	/* Update lights */
	//Light0.SetPosition();
	
	/* Draw scene */
	SceneBegin();

	Level.Draw();
	Player.Draw();
	
	/* Update enemies */
	foreach (var e in Enemies)
		e.Draw();

	SceneEnd();
}



function DownloadReady(RequestID)
{
}

function OnTimer()
{
}

function OnEvent(eventID, wparam, lparam)
{
}

function OnError()
{
}

function OnExit()
{
}
